
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Thu Oct 18 01:55:06 CST 2018
//----------------------------------------------------

package D_Mas_Mas.Analizador;

import Arbol.Expresion.*;
import java_cup.runtime.*;
import java.io.*;
import java.lang.*;
import java.util.*;
import java.util.ArrayList;

/** CUP v0.10k generated parser.
  * @version Thu Oct 18 01:55:06 CST 2018
  */
public class ParserDMM extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public ParserDMM() {super();}

  /** Constructor which sets the default scanner. */
  public ParserDMM(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\175\000\002\002\004\000\002\003\003\000\002\004" +
    "\003\000\002\004\004\000\002\006\003\000\002\006\003" +
    "\000\002\006\003\000\002\012\003\000\002\012\003\000" +
    "\002\012\003\000\002\012\003\000\002\012\003\000\002" +
    "\012\003\000\002\013\005\000\002\013\006\000\002\013" +
    "\010\000\002\061\005\000\002\061\003\000\002\015\003" +
    "\000\002\015\005\000\002\014\005\000\002\014\004\000" +
    "\002\014\004\000\002\016\003\000\002\016\004\000\002" +
    "\017\005\000\002\020\003\000\002\020\005\000\002\005" +
    "\005\000\002\021\003\000\002\021\005\000\002\060\005" +
    "\000\002\022\003\000\002\022\003\000\002\062\003\000" +
    "\002\062\003\000\002\062\003\000\002\062\003\000\002" +
    "\062\003\000\002\062\003\000\002\062\003\000\002\062" +
    "\005\000\002\062\005\000\002\062\005\000\002\062\005" +
    "\000\002\062\005\000\002\062\004\000\002\062\004\000" +
    "\002\062\004\000\002\062\005\000\002\062\005\000\002" +
    "\062\005\000\002\062\005\000\002\062\005\000\002\062" +
    "\005\000\002\062\005\000\002\062\005\000\002\062\004" +
    "\000\002\062\005\000\002\023\003\000\002\023\003\000" +
    "\002\023\005\000\002\023\005\000\002\024\004\000\002" +
    "\025\007\000\002\026\004\000\002\026\005\000\002\027" +
    "\003\000\002\027\004\000\002\027\004\000\002\027\003" +
    "\000\002\027\003\000\002\027\003\000\002\027\003\000" +
    "\002\027\003\000\002\027\003\000\002\027\003\000\002" +
    "\027\003\000\002\027\003\000\002\027\004\000\002\030" +
    "\003\000\002\030\004\000\002\031\007\000\002\032\004" +
    "\000\002\033\010\000\002\034\003\000\002\034\004\000" +
    "\002\035\003\000\002\035\004\000\002\035\004\000\002" +
    "\035\005\000\002\036\007\000\002\063\003\000\002\063" +
    "\004\000\002\037\012\000\002\040\004\000\002\041\004" +
    "\000\002\042\004\000\002\042\005\000\002\043\007\000" +
    "\002\011\007\000\002\044\007\000\002\045\004\000\002" +
    "\045\005\000\002\010\006\000\002\010\006\000\002\007" +
    "\006\000\002\064\004\000\002\046\003\000\002\046\005" +
    "\000\002\047\004\000\002\047\005\000\002\050\005\000" +
    "\002\050\004\000\002\051\004\000\002\052\003\000\002" +
    "\052\003\000\002\052\003\000\002\052\003\000\002\052" +
    "\003\000\002\053\015\000\002\054\016\000\002\055\016" +
    "\000\002\056\014\000\002\057\020" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\113\000\026\011\004\013\006\035\014\052\010\053" +
    "\005\055\012\056\024\057\022\060\016\074\015\001\002" +
    "\000\004\011\105\001\002\000\052\002\uffd9\012\uffd9\014" +
    "\uffd9\016\uffd9\017\uffd9\030\uffd9\034\uffd9\035\uffd9\036\uffd9" +
    "\037\uffd9\040\uffd9\042\uffd9\043\uffd9\044\uffd9\045\uffd9\046" +
    "\uffd9\047\uffd9\050\uffd9\051\uffd9\061\uffd9\001\002\000\026" +
    "\011\004\013\006\035\014\052\010\053\005\055\012\056" +
    "\024\057\022\060\016\074\015\001\002\000\054\002\uffde" +
    "\012\uffde\014\uffde\016\uffde\017\uffde\030\uffde\031\076\034" +
    "\uffde\035\uffde\036\uffde\037\uffde\040\uffde\042\uffde\043\uffde" +
    "\044\uffde\045\uffde\046\uffde\047\uffde\050\uffde\051\uffde\061" +
    "\uffde\001\002\000\026\011\004\013\006\035\014\052\010" +
    "\053\005\055\012\056\024\057\022\060\016\074\015\001" +
    "\002\000\054\002\uffc5\012\uffc5\014\uffc5\016\uffc5\017\uffc5" +
    "\030\uffc5\031\uffc5\034\uffc5\035\uffc5\036\uffc5\037\uffc5\040" +
    "\uffc5\042\uffc5\043\uffc5\044\uffc5\045\uffc5\046\uffc5\047\uffc5" +
    "\050\uffc5\051\uffc5\061\uffc5\001\002\000\052\002\uffdd\012" +
    "\uffdd\014\uffdd\016\uffdd\017\uffdd\030\uffdd\034\uffdd\035\uffdd" +
    "\036\uffdd\037\uffdd\040\uffdd\042\uffdd\043\uffdd\044\uffdd\045" +
    "\uffdd\046\uffdd\047\uffdd\050\uffdd\051\uffdd\061\uffdd\001\002" +
    "\000\004\002\074\001\002\000\026\011\004\013\006\035" +
    "\014\052\010\053\005\055\012\056\024\057\022\060\016" +
    "\074\015\001\002\000\052\002\uffda\012\uffda\014\uffda\016" +
    "\uffda\017\uffda\030\uffda\034\uffda\035\uffda\036\uffda\037\uffda" +
    "\040\uffda\042\uffda\043\uffda\044\uffda\045\uffda\046\uffda\047" +
    "\uffda\050\uffda\051\uffda\061\uffda\001\002\000\052\002\uffdc" +
    "\012\uffdc\014\uffdc\016\uffdc\017\uffdc\030\uffdc\034\uffdc\035" +
    "\uffdc\036\uffdc\037\uffdc\040\uffdc\042\uffdc\043\uffdc\044\uffdc" +
    "\045\uffdc\046\uffdc\047\uffdc\050\uffdc\051\uffdc\061\uffdc\001" +
    "\002\000\052\002\uffdf\012\uffdf\014\uffdf\016\uffdf\017\uffdf" +
    "\030\uffdf\034\uffdf\035\uffdf\036\uffdf\037\uffdf\040\uffdf\042" +
    "\uffdf\043\uffdf\044\uffdf\045\uffdf\046\uffdf\047\uffdf\050\uffdf" +
    "\051\uffdf\061\uffdf\001\002\000\012\002\uffe1\012\uffe1\016" +
    "\uffe1\030\uffe1\001\002\000\046\002\uffe0\012\uffe0\016\uffe0" +
    "\030\uffe0\034\051\035\044\036\040\037\046\040\035\042" +
    "\045\043\052\044\047\045\036\046\037\047\041\050\043" +
    "\051\042\061\050\001\002\000\052\002\uffdb\012\uffdb\014" +
    "\uffdb\016\uffdb\017\uffdb\030\uffdb\034\uffdb\035\uffdb\036\uffdb" +
    "\037\uffdb\040\uffdb\042\uffdb\043\uffdb\044\uffdb\045\uffdb\046" +
    "\uffdb\047\uffdb\050\uffdb\051\uffdb\061\uffdb\001\002\000\004" +
    "\002\000\001\002\000\062\002\uffc6\012\uffc6\014\uffc6\015" +
    "\026\016\uffc6\017\uffc6\030\uffc6\031\uffc6\032\031\033\027" +
    "\034\uffc6\035\uffc6\036\uffc6\037\uffc6\040\uffc6\042\uffc6\043" +
    "\uffc6\044\uffc6\045\uffc6\046\uffc6\047\uffc6\050\uffc6\051\uffc6" +
    "\061\uffc6\001\002\000\056\002\uffc2\012\uffc2\014\uffc2\015" +
    "\026\016\uffc2\017\uffc2\030\uffc2\031\uffc2\034\uffc2\035\uffc2" +
    "\036\uffc2\037\uffc2\040\uffc2\042\uffc2\043\uffc2\044\uffc2\045" +
    "\uffc2\046\uffc2\047\uffc2\050\uffc2\051\uffc2\061\uffc2\001\002" +
    "\000\026\011\004\013\006\035\014\052\010\053\005\055" +
    "\012\056\024\057\022\060\016\074\015\001\002\000\052" +
    "\002\uffd2\012\uffd2\014\uffd2\016\uffd2\017\uffd2\030\uffd2\034" +
    "\uffd2\035\uffd2\036\uffd2\037\uffd2\040\uffd2\042\uffd2\043\uffd2" +
    "\044\uffd2\045\uffd2\046\uffd2\047\uffd2\050\uffd2\051\uffd2\061" +
    "\uffd2\001\002\000\056\002\uffea\012\uffea\014\uffea\015\uffea" +
    "\016\uffea\017\uffea\030\uffea\031\uffea\034\uffea\035\uffea\036" +
    "\uffea\037\uffea\040\uffea\042\uffea\043\uffea\044\uffea\045\uffea" +
    "\046\uffea\047\uffea\050\uffea\051\uffea\061\uffea\001\002\000" +
    "\052\002\uffd3\012\uffd3\014\uffd3\016\uffd3\017\uffd3\030\uffd3" +
    "\034\uffd3\035\uffd3\036\uffd3\037\uffd3\040\uffd3\042\uffd3\043" +
    "\uffd3\044\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3" +
    "\061\uffd3\001\002\000\004\016\033\001\002\000\056\002" +
    "\uffe8\012\uffe8\014\uffe8\015\uffe8\016\uffe8\017\uffe8\030\uffe8" +
    "\031\uffe8\034\uffe8\035\uffe8\036\uffe8\037\uffe8\040\uffe8\042" +
    "\uffe8\043\uffe8\044\uffe8\045\uffe8\046\uffe8\047\uffe8\050\uffe8" +
    "\051\uffe8\061\uffe8\001\002\000\056\002\uffe9\012\uffe9\014" +
    "\uffe9\015\uffe9\016\uffe9\017\uffe9\030\uffe9\031\uffe9\034\uffe9" +
    "\035\uffe9\036\uffe9\037\uffe9\040\uffe9\042\uffe9\043\uffe9\044" +
    "\uffe9\045\uffe9\046\uffe9\047\uffe9\050\uffe9\051\uffe9\061\uffe9" +
    "\001\002\000\026\011\004\013\006\035\014\052\010\053" +
    "\005\055\012\056\024\057\022\060\016\074\015\001\002" +
    "\000\026\011\004\013\006\035\014\052\010\053\005\055" +
    "\012\056\024\057\022\060\016\074\015\001\002\000\026" +
    "\011\004\013\006\035\014\052\010\053\005\055\012\056" +
    "\024\057\022\060\016\074\015\001\002\000\026\011\004" +
    "\013\006\035\014\052\010\053\005\055\012\056\024\057" +
    "\022\060\016\074\015\001\002\000\026\011\004\013\006" +
    "\035\014\052\010\053\005\055\012\056\024\057\022\060" +
    "\016\074\015\001\002\000\026\011\004\013\006\035\014" +
    "\052\010\053\005\055\012\056\024\057\022\060\016\074" +
    "\015\001\002\000\026\011\004\013\006\035\014\052\010" +
    "\053\005\055\012\056\024\057\022\060\016\074\015\001" +
    "\002\000\026\011\004\013\006\035\014\052\010\053\005" +
    "\055\012\056\024\057\022\060\016\074\015\001\002\000" +
    "\026\011\004\013\006\035\014\052\010\053\005\055\012" +
    "\056\024\057\022\060\016\074\015\001\002\000\026\011" +
    "\004\013\006\035\014\052\010\053\005\055\012\056\024" +
    "\057\022\060\016\074\015\001\002\000\026\011\004\013" +
    "\006\035\014\052\010\053\005\055\012\056\024\057\022" +
    "\060\016\074\015\001\002\000\026\011\004\013\006\035" +
    "\014\052\010\053\005\055\012\056\024\057\022\060\016" +
    "\074\015\001\002\000\026\011\004\013\006\035\014\052" +
    "\010\053\005\055\012\056\024\057\022\060\016\074\015" +
    "\001\002\000\026\011\004\013\006\035\014\052\010\053" +
    "\005\055\012\056\024\057\022\060\016\074\015\001\002" +
    "\000\052\002\uffcf\012\uffcf\014\uffcf\016\uffcf\017\uffcf\030" +
    "\uffcf\034\051\035\044\036\040\037\046\040\035\042\uffcf" +
    "\043\uffcf\044\uffcf\045\uffcf\046\uffcf\047\uffcf\050\uffcf\051" +
    "\uffcf\061\uffcf\001\002\000\052\002\uffd8\012\uffd8\014\uffd8" +
    "\016\uffd8\017\uffd8\030\uffd8\034\uffd8\035\uffd8\036\040\037" +
    "\046\040\035\042\uffd8\043\uffd8\044\uffd8\045\uffd8\046\uffd8" +
    "\047\uffd8\050\uffd8\051\uffd8\061\uffd8\001\002\000\036\017" +
    "\056\034\051\035\044\036\040\037\046\040\035\042\045" +
    "\043\052\044\047\045\036\046\037\047\041\050\043\051" +
    "\042\001\002\000\026\011\004\013\006\035\014\052\010" +
    "\053\005\055\012\056\024\057\022\060\016\074\015\001" +
    "\002\000\044\002\uffc1\012\uffc1\016\uffc1\030\uffc1\034\051" +
    "\035\044\036\040\037\046\040\035\042\045\043\052\044" +
    "\047\045\036\046\037\047\041\050\043\051\042\001\002" +
    "\000\052\002\uffce\012\uffce\014\uffce\016\uffce\017\uffce\030" +
    "\uffce\034\051\035\044\036\040\037\046\040\035\042\uffce" +
    "\043\uffce\044\uffce\045\uffce\046\uffce\047\uffce\050\uffce\051" +
    "\uffce\061\uffce\001\002\000\052\002\uffd5\012\uffd5\014\uffd5" +
    "\016\uffd5\017\uffd5\030\uffd5\034\uffd5\035\uffd5\036\uffd5\037" +
    "\uffd5\040\035\042\uffd5\043\uffd5\044\uffd5\045\uffd5\046\uffd5" +
    "\047\uffd5\050\uffd5\051\uffd5\061\uffd5\001\002\000\052\002" +
    "\uffd0\012\uffd0\014\uffd0\016\uffd0\017\uffd0\030\uffd0\034\051" +
    "\035\044\036\040\037\046\040\035\042\uffd0\043\uffd0\044" +
    "\uffd0\045\uffd0\046\uffd0\047\uffd0\050\uffd0\051\uffd0\061\uffd0" +
    "\001\002\000\052\002\uffd7\012\uffd7\014\uffd7\016\uffd7\017" +
    "\uffd7\030\uffd7\034\uffd7\035\uffd7\036\040\037\046\040\035" +
    "\042\uffd7\043\uffd7\044\uffd7\045\uffd7\046\uffd7\047\uffd7\050" +
    "\uffd7\051\uffd7\061\uffd7\001\002\000\052\002\uffca\012\uffca" +
    "\014\uffca\016\uffca\017\uffca\030\uffca\034\051\035\044\036" +
    "\040\037\046\040\035\042\045\043\052\044\047\045\036" +
    "\046\037\047\041\050\uffca\051\uffca\061\uffca\001\002\000" +
    "\052\002\uffc9\012\uffc9\014\uffc9\016\uffc9\017\uffc9\030\uffc9" +
    "\034\051\035\044\036\040\037\046\040\035\042\045\043" +
    "\052\044\047\045\036\046\037\047\041\050\043\051\uffc9" +
    "\061\uffc9\001\002\000\052\002\uffcb\012\uffcb\014\uffcb\016" +
    "\uffcb\017\uffcb\030\uffcb\034\051\035\044\036\040\037\046" +
    "\040\035\042\uffcb\043\uffcb\044\uffcb\045\uffcb\046\uffcb\047" +
    "\uffcb\050\uffcb\051\uffcb\061\uffcb\001\002\000\052\002\uffd6" +
    "\012\uffd6\014\uffd6\016\uffd6\017\uffd6\030\uffd6\034\uffd6\035" +
    "\uffd6\036\uffd6\037\uffd6\040\035\042\uffd6\043\uffd6\044\uffd6" +
    "\045\uffd6\046\uffd6\047\uffd6\050\uffd6\051\uffd6\061\uffd6\001" +
    "\002\000\052\002\uffcc\012\uffcc\014\uffcc\016\uffcc\017\uffcc" +
    "\030\uffcc\034\051\035\044\036\040\037\046\040\035\042" +
    "\uffcc\043\uffcc\044\uffcc\045\uffcc\046\uffcc\047\uffcc\050\uffcc" +
    "\051\uffcc\061\uffcc\001\002\000\052\002\uffcd\012\uffcd\014" +
    "\uffcd\016\uffcd\017\uffcd\030\uffcd\034\051\035\044\036\040" +
    "\037\046\040\035\042\uffcd\043\uffcd\044\uffcd\045\uffcd\046" +
    "\uffcd\047\uffcd\050\uffcd\051\uffcd\061\uffcd\001\002\000\052" +
    "\002\uffd4\012\uffd4\014\uffd4\016\uffd4\017\uffd4\030\uffd4\034" +
    "\uffd4\035\uffd4\036\uffd4\037\uffd4\040\035\042\uffd4\043\uffd4" +
    "\044\uffd4\045\uffd4\046\uffd4\047\uffd4\050\uffd4\051\uffd4\061" +
    "\uffd4\001\002\000\052\002\uffd1\012\uffd1\014\uffd1\016\uffd1" +
    "\017\uffd1\030\uffd1\034\uffd1\035\uffd1\036\040\037\046\040" +
    "\035\042\uffd1\043\uffd1\044\uffd1\045\uffd1\046\uffd1\047\uffd1" +
    "\050\uffd1\051\uffd1\061\uffd1\001\002\000\004\002\001\001" +
    "\002\000\052\002\uffc8\012\uffc8\014\uffc8\016\uffc8\017\uffc8" +
    "\030\uffc8\034\051\035\044\036\040\037\046\040\035\042" +
    "\045\043\052\044\047\045\036\046\037\047\041\050\uffc8" +
    "\051\uffc8\061\uffc8\001\002\000\004\056\077\001\002\000" +
    "\056\002\uffc4\012\uffc4\014\uffc4\015\026\016\uffc4\017\uffc4" +
    "\030\uffc4\031\uffc4\034\uffc4\035\uffc4\036\uffc4\037\uffc4\040" +
    "\uffc4\042\uffc4\043\uffc4\044\uffc4\045\uffc4\046\uffc4\047\uffc4" +
    "\050\uffc4\051\uffc4\061\uffc4\001\002\000\054\002\uffc3\012" +
    "\uffc3\014\uffc3\016\uffc3\017\uffc3\030\uffc3\031\uffc3\034\uffc3" +
    "\035\uffc3\036\uffc3\037\uffc3\040\uffc3\042\uffc3\043\uffc3\044" +
    "\uffc3\045\uffc3\046\uffc3\047\uffc3\050\uffc3\051\uffc3\061\uffc3" +
    "\001\002\000\036\014\102\034\051\035\044\036\040\037" +
    "\046\040\035\042\045\043\052\044\047\045\036\046\037" +
    "\047\041\050\043\051\042\001\002\000\052\002\uffc7\012" +
    "\uffc7\014\uffc7\016\uffc7\017\uffc7\030\uffc7\034\uffc7\035\uffc7" +
    "\036\uffc7\037\uffc7\040\uffc7\042\uffc7\043\uffc7\044\uffc7\045" +
    "\uffc7\046\uffc7\047\uffc7\050\uffc7\051\uffc7\061\uffc7\001\002" +
    "\000\006\012\uffe4\030\uffe4\001\002\000\006\012\113\030" +
    "\114\001\002\000\026\011\004\013\006\035\014\052\010" +
    "\053\005\055\012\056\024\057\022\060\016\074\015\001" +
    "\002\000\006\012\110\030\111\001\002\000\006\012\uffe7" +
    "\030\uffe7\001\002\000\006\012\uffe5\030\uffe5\001\002\000" +
    "\026\011\004\013\006\035\014\052\010\053\005\055\012" +
    "\056\024\057\022\060\016\074\015\001\002\000\006\012" +
    "\uffe6\030\uffe6\001\002\000\052\002\uffe2\012\uffe2\014\uffe2" +
    "\016\uffe2\017\uffe2\030\uffe2\034\uffe2\035\uffe2\036\uffe2\037" +
    "\uffe2\040\uffe2\042\uffe2\043\uffe2\044\uffe2\045\uffe2\046\uffe2" +
    "\047\uffe2\050\uffe2\051\uffe2\061\uffe2\001\002\000\004\011" +
    "\105\001\002\000\006\012\uffe3\030\uffe3\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\113\000\020\003\012\022\022\023\006\024\010\025" +
    "\017\060\016\062\020\001\001\000\006\005\102\021\103" +
    "\001\001\000\002\001\001\000\012\023\006\024\010\060" +
    "\016\062\100\001\001\000\002\001\001\000\012\023\006" +
    "\024\010\060\016\062\074\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\023\006\024\010" +
    "\060\016\062\072\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\016\024\017" +
    "\027\001\001\000\004\017\033\001\001\000\016\022\031" +
    "\023\006\024\010\025\017\060\016\062\020\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\023" +
    "\006\024\010\060\016\062\071\001\001\000\012\023\006" +
    "\024\010\060\016\062\070\001\001\000\012\023\006\024" +
    "\010\060\016\062\067\001\001\000\012\023\006\024\010" +
    "\060\016\062\066\001\001\000\012\023\006\024\010\060" +
    "\016\062\065\001\001\000\012\023\006\024\010\060\016" +
    "\062\064\001\001\000\012\023\006\024\010\060\016\062" +
    "\063\001\001\000\012\023\006\024\010\060\016\062\062" +
    "\001\001\000\012\023\006\024\010\060\016\062\061\001" +
    "\001\000\012\023\006\024\010\060\016\062\060\001\001" +
    "\000\012\023\006\024\010\060\016\062\057\001\001\000" +
    "\012\023\006\024\010\060\016\062\054\001\001\000\012" +
    "\023\006\024\010\060\016\062\053\001\001\000\012\023" +
    "\006\024\010\060\016\062\052\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\023\006\024" +
    "\010\060\016\062\056\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\024\077\001\001\000\006\016\024\017" +
    "\027\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\020" +
    "\105\022\106\023\006\024\010\025\017\060\016\062\020" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\022\111\023\006\024\010\025\017\060\016" +
    "\062\020\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\005\114\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$ParserDMM$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$ParserDMM$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$ParserDMM$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



 /* -------------------------==: DECLARAR EL ARBOL :==--------------------------*/
    //public Nodo Gramaticas;     
    public static String cadena;
	

	

/* -------------------------==: ERROR SINTACTICO :==--------------------------*/
public void syntax_error(Symbol s){
    System.out.println("Error Sintactico -> lexema: " +s.value+" Linea: " +s.right+ " Columna: "+s.left);
    cadena += "<tr>"
                + "<td><center><b>" + s.value + "</b></center></td>"
                + "<td><center><b>" + s.right + "</b></center></td>"
                + "<td><center><b>" + s.left+ "</b></center></td>"
                + "</tr>";
				
}

/* ------------------==: ERROR SINTACTICO NO RECUPERABLE :==------------------*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
    System.out.println("Error Sintactico No Recuperable-> Lexema: " +s.value+" Linea: "+s.right+ " Columna: "+s.left);
     cadena += "<tr>"
                + "<td><center><b>" + s.value + "</b></center></td>"
                + "<td><center><b>" + s.right + "</b></center></td>"
                + "<td><center><b>" + s.left+ "</b></center></td>"
                + "</tr>";
				
}


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$ParserDMM$actions {


//Operaciones_Listas operaciones = new Operaciones_Listas();


  private final ParserDMM parser;

  /** Constructor */
  CUP$ParserDMM$actions(ParserDMM parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$ParserDMM$do_action(
    int                        CUP$ParserDMM$act_num,
    java_cup.runtime.lr_parser CUP$ParserDMM$parser,
    java.util.Stack            CUP$ParserDMM$stack,
    int                        CUP$ParserDMM$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$ParserDMM$result;

      /* select the action based on the action number */
      switch (CUP$ParserDMM$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // LINEA ::= linea abrePar EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(45/*LINEA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-13)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // P_CADENA ::= t_cadena abrePar EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(44/*P_CADENA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-9)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // OVALO ::= ovalo abrePar EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(43/*OVALO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-11)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // CUADRADO ::= cuadrado abrePar EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(42/*CUADRADO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-11)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // PUNTO ::= puntoD abrePar EXPRESION coma EXPRESION coma EXPRESION coma EXPRESION cierraPar puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(41/*PUNTO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-10)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // FUN_NATIVA ::= LINEA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(40/*FUN_NATIVA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // FUN_NATIVA ::= P_CADENA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(40/*FUN_NATIVA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // FUN_NATIVA ::= OVALO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(40/*FUN_NATIVA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // FUN_NATIVA ::= CUADRADO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(40/*FUN_NATIVA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // FUN_NATIVA ::= PUNTO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(40/*FUN_NATIVA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // LLAMADA ::= identificador PARAMETROS_LLAMADA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(39/*LLAMADA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // PARAMETROS_LLAMADA ::= abrePar cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(38/*PARAMETROS_LLAMADA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // PARAMETROS_LLAMADA ::= abrePar LISTA_EXPRESION cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(38/*PARAMETROS_LLAMADA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // DECLA_PARAMETROS ::= abrePar LISTA_DECLA_PARAMETROS cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(37/*DECLA_PARAMETROS*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // DECLA_PARAMETROS ::= abrePar cierraPar 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(37/*DECLA_PARAMETROS*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // LISTA_DECLA_PARAMETROS ::= LISTA_DECLA_PARAMETROS coma DECLA_PARAMETRO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(36/*LISTA_DECLA_PARAMETROS*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // LISTA_DECLA_PARAMETROS ::= DECLA_PARAMETRO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(36/*LISTA_DECLA_PARAMETROS*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // DECLA_PARAMETRO ::= TIPO_DATO identificador 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(50/*DECLA_PARAMETRO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // PRINCIPAL ::= vacio principal DECLA_PARAMETROS CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(5/*PRINCIPAL*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-3)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // FUNCION ::= TIPO_DATO identificador DECLA_PARAMETROS CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(6/*FUNCION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-3)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // FUNCION ::= vacio identificador DECLA_PARAMETROS CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(6/*FUNCION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-3)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // LISTA_DECLARACIONES ::= LISTA_DECLARACIONES DECLARACION puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(35/*LISTA_DECLARACIONES*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // LISTA_DECLARACIONES ::= DECLARACION puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(35/*LISTA_DECLARACIONES*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // ESTRUCTURA ::= estructura identificador abreLlave LISTA_DECLARACIONES cierraLlave 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(34/*ESTRUCTURA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-4)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // IMPORTAR ::= importar abrePar cadena cierraPar puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(7/*IMPORTAR*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-4)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // IMPRIMIR ::= imprimir abrePar EXPRESION cierraPar puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(33/*IMPRIMIR*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-4)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // RETORNAR ::= retornar EXPRESION puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(32/*RETORNAR*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // RETORNAR ::= retornar puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(32/*RETORNAR*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // CONTINUAR ::= continuar puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(31/*CONTINUAR*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // DETENER ::= detener puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(30/*DETENER*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // PARA ::= para abrePar DECLA_PARA EXPRESION puntoComa ASIGNACION cierraPar CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(29/*PARA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-7)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // DECLA_PARA ::= ASIGNACION puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(49/*DECLA_PARA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // DECLA_PARA ::= DECLARACION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(49/*DECLA_PARA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // MIENTRAS ::= mientras abrePar EXPRESION cierraPar CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(28/*MIENTRAS*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-4)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // SI ::= IF L_SINO_SI SINO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(27/*SI*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // SI ::= IF L_SINO_SI 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(27/*SI*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // SI ::= IF SINO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(27/*SI*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // SI ::= IF 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(27/*SI*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // L_SINO_SI ::= L_SINO_SI SINO_SI 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(26/*L_SINO_SI*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // L_SINO_SI ::= SINO_SI 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(26/*L_SINO_SI*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // SINO_SI ::= sino si abrePar EXPRESION cierraPar CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(25/*SINO_SI*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-5)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // SINO ::= sino CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(24/*SINO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // IF ::= si abrePar EXPRESION cierraPar CUERPO_FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(23/*IF*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-4)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // SENTENCIAS ::= SENTENCIAS SENTENCIA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(22/*SENTENCIAS*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // SENTENCIAS ::= SENTENCIA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(22/*SENTENCIAS*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // SENTENCIA ::= LLAMADA puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // SENTENCIA ::= FUN_NATIVA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // SENTENCIA ::= ESTRUCTURA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // SENTENCIA ::= IMPRIMIR 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // SENTENCIA ::= RETORNAR 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // SENTENCIA ::= CONTINUAR 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // SENTENCIA ::= DETENER 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // SENTENCIA ::= PARA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // SENTENCIA ::= MIENTRAS 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // SENTENCIA ::= SI 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // SENTENCIA ::= TERNARIO puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // SENTENCIA ::= ASIGNACION puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // SENTENCIA ::= DECLARACION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(21/*SENTENCIA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CUERPO_FUNCION ::= abreLlave SENTENCIAS cierraLlave 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(20/*CUERPO_FUNCION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CUERPO_FUNCION ::= abreLlave cierraLlave 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(20/*CUERPO_FUNCION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // TERNARIO ::= VAL_EXPRESION interrogacion VAL_EXPRESION dosPuntos VAL_EXPRESION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(19/*TERNARIO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-4)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // POS_ARREGLO ::= identificador TAMANIO_ARREGLO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(18/*POS_ARREGLO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ACCESO ::= ACCESO punto POS_ARREGLO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(17/*ACCESO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ACCESO ::= ACCESO punto identificador 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(17/*ACCESO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ACCESO ::= POS_ARREGLO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(17/*ACCESO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // ACCESO ::= identificador 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Identificador(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(17/*ACCESO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // VAL_EXPRESION ::= abrePar VAL_EXPRESION cierraPar 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).value;
		RESULT = a;
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // VAL_EXPRESION ::= not VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new NOT(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // VAL_EXPRESION ::= VAL_EXPRESION or VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Logica(a,b,"||");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // VAL_EXPRESION ::= VAL_EXPRESION and VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Logica(a,b,"&&");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // VAL_EXPRESION ::= VAL_EXPRESION distintoA VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Relacional(a,b,"!=");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // VAL_EXPRESION ::= VAL_EXPRESION igualIgual VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Relacional(a,b,"==");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // VAL_EXPRESION ::= VAL_EXPRESION mayorIgual VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Relacional(a,b,">=");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // VAL_EXPRESION ::= VAL_EXPRESION menorIgual VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Relacional(a,b,"<=");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // VAL_EXPRESION ::= VAL_EXPRESION mayor VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Relacional(a,b,">");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // VAL_EXPRESION ::= VAL_EXPRESION menor VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Relacional(a,b,"<");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // VAL_EXPRESION ::= menos VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Negativo(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // VAL_EXPRESION ::= identificador menosMenos 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).value;
		RESULT= new Unario(a,"--");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // VAL_EXPRESION ::= identificador masMas 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).value;
		RESULT= new Unario(a,"++");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // VAL_EXPRESION ::= VAL_EXPRESION potencia VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Aritmetica(a,b,"^");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // VAL_EXPRESION ::= VAL_EXPRESION division VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Aritmetica(a,b,"/");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // VAL_EXPRESION ::= VAL_EXPRESION multiplicacion VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Aritmetica(a,b,"*");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // VAL_EXPRESION ::= VAL_EXPRESION menos VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Aritmetica(a,b,"-");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // VAL_EXPRESION ::= VAL_EXPRESION mas VAL_EXPRESION 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Aritmetica(a,b,"+");
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // VAL_EXPRESION ::= valBool 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Booleano(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // VAL_EXPRESION ::= caracter 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Caracter(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // VAL_EXPRESION ::= numero_entero 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Entero(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // VAL_EXPRESION ::= numero_decimal 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Decimal(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // VAL_EXPRESION ::= cadena 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).value;
		RESULT= new Cadena(a);
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // VAL_EXPRESION ::= ACCESO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // VAL_EXPRESION ::= DIMENSIONES_EXPRESION_ARREGLO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(48/*VAL_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // EXPRESION ::= VAL_EXPRESION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(16/*EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // EXPRESION ::= TERNARIO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(16/*EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // DIMENSIONES_EXPRESION_ARREGLO ::= abreLlave LISTA_DIMESNIONES_EXP_ARREGLO cierraLlave 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(46/*DIMENSIONES_EXPRESION_ARREGLO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // LISTA_DIMESNIONES_EXP_ARREGLO ::= LISTA_DIMESNIONES_EXP_ARREGLO coma DIM_EXPRESIONES 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(15/*LISTA_DIMESNIONES_EXP_ARREGLO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // LISTA_DIMESNIONES_EXP_ARREGLO ::= DIM_EXPRESIONES 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(15/*LISTA_DIMESNIONES_EXP_ARREGLO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // DIM_EXPRESIONES ::= abreLlave LISTA_EXPRESION cierraLlave 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(3/*DIM_EXPRESIONES*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // LISTA_EXPRESION ::= LISTA_EXPRESION coma EXPRESION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(14/*LISTA_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // LISTA_EXPRESION ::= EXPRESION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(14/*LISTA_EXPRESION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // VAL_ARREGLO ::= abreCor EXPRESION cierraCor 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(13/*VAL_ARREGLO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // TAMANIO_ARREGLO ::= TAMANIO_ARREGLO VAL_ARREGLO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(12/*TAMANIO_ARREGLO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // TAMANIO_ARREGLO ::= VAL_ARREGLO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(12/*TAMANIO_ARREGLO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // ASIGNACION ::= identificador menosMenos 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(10/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // ASIGNACION ::= identificador masMas 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(10/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ASIGNACION ::= ACCESO igual EXPRESION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(10/*ASIGNACION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // LISTA_ID_ASIGNA ::= LISTA_ID_ASIGNA coma ID_ASIGNA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(11/*LISTA_ID_ASIGNA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // LISTA_ID_ASIGNA ::= ID_ASIGNA 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(11/*LISTA_ID_ASIGNA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // ID_ASIGNA ::= identificador 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(47/*ID_ASIGNA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // ID_ASIGNA ::= identificador igual EXPRESION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(47/*ID_ASIGNA*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // DECLARACION ::= TIPO_DATO identificador TAMANIO_ARREGLO igual EXPRESION puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(9/*DECLARACION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-5)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // DECLARACION ::= TIPO_DATO identificador TAMANIO_ARREGLO puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(9/*DECLARACION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-3)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // DECLARACION ::= TIPO_DATO LISTA_ID_ASIGNA puntoComa 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(9/*DECLARACION*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-2)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // TIPO_DATO ::= identificador 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(8/*TIPO_DATO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // TIPO_DATO ::= t_booleano 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(8/*TIPO_DATO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // TIPO_DATO ::= t_caracter 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(8/*TIPO_DATO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // TIPO_DATO ::= t_cadena 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(8/*TIPO_DATO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // TIPO_DATO ::= t_decimal 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(8/*TIPO_DATO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // TIPO_DATO ::= t_entero 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(8/*TIPO_DATO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // ELEMENTO_ARCHIVO ::= IMPORTAR 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(4/*ELEMENTO_ARCHIVO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ELEMENTO_ARCHIVO ::= FUNCION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(4/*ELEMENTO_ARCHIVO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ELEMENTO_ARCHIVO ::= PRINCIPAL 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(4/*ELEMENTO_ARCHIVO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // ARCHIVO ::= ARCHIVO ELEMENTO_ARCHIVO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(2/*ARCHIVO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // ARCHIVO ::= ELEMENTO_ARCHIVO 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(2/*ARCHIVO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= EXPRESION 
            {
              Object RESULT = null;

              CUP$ParserDMM$result = new java_cup.runtime.Symbol(1/*INICIO*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          return CUP$ParserDMM$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).value;
		RESULT = start_val;
              CUP$ParserDMM$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-1)).left, ((java_cup.runtime.Symbol)CUP$ParserDMM$stack.elementAt(CUP$ParserDMM$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$ParserDMM$parser.done_parsing();
          return CUP$ParserDMM$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

